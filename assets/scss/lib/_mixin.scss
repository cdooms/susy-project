// ====================================================================================================== //
// MIXINS //
// ====================================================================================================== //
@mixin circle($size) {
  width: $size;
  height: $size;
  @include border-radius($size / 2);
}

@mixin square($size) {
  width: $size;
  height: $size;
}

@mixin rect($width, $height) {
  width: $width;
  height: $height;
}

@mixin arrowright($color: #FFF, $size: 15px, $sharpness: 25px) {
  border: solid transparent;
  height: 0;
  width: 0;
  pointer-events: none;
  border-left-color: $color;
  border-width: $size;
  border-left-width: $sharpness;
}

@mixin arrowleft($color: #FFF, $size: 15px, $sharpness: 25px) {
  border: solid transparent;
  height: 0;
  width: 0;
  pointer-events: none;
  border-right-color: $color;
  border-width: $size;
  border-right-width: $sharpness;
}

@mixin arrowtop($color: #FFF, $size: 15px, $sharpness: 25px) {
  border: solid transparent;
  height: 0;
  width: 0;
  pointer-events: none;
  border-bottom-color: $color;
  border-width: $size;
  border-bottom-width: $sharpness;
}

@mixin arrowbottom($color: #FFF, $size: 15px, $sharpness: 25px) {
  border: solid transparent;
  height: 0;
  width: 0;
  pointer-events: none;
  border-top-color: $color;
  border-width: $size;
  border-top-width: $sharpness;
}

@mixin customcheck($width, $height, $path, $hover-row, $hover-col) {
  position: relative;
  width: $width;
  height: $height;

  input {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 100;
    cursor: pointer;
    opacity: 0;
  }

  label {
    position: relative;
    display: block;
    background: image-url($path) top left no-repeat;
    width: 100%;
    height: 100%;
  }

  input:checked ~ label {
    @include sprite-position($hover-row, $hover-col, $width, $height);
  }
}

@mixin typo($font, $size, $lh, $color, $weight: normal, $style: normal, $unit: rem) {
  @include font-size-line-height($size, $lh, $unit);
  font-family: $font;
  color: $color;
  font-weight: $weight;
  font-style: $style;
}

@function font-family-stack($name: "Arial", $kind: "regular", $stack: "Helvetica, Arial, Sans-Serif") {
  @return "#{$name}-#{$kind}", $stack;
}

@mixin font-size($size, $unit: rem) {
  @if $rem-with-px-fallback == true {
    font-size: $size + px;
  }

  font-size: $size / $rembase + $unit;
}

@mixin line-height($line-height, $unit: rem) {
  @if $rem-with-px-fallback == true {
    line-height: $line-height + px;
  }

  line-height: $line-height / $rembase + $unit;
}

@mixin font-size-line-height($font-size, $line-height, $unit: rem) {
  @include font-size($font-size, $unit);
  @include line-height($line-height, $unit);
}

@mixin fontsmoothing ($smooting: antialiased) {
  -webkit-font-smoothing: $smooting;
  -moz-font-smoothing: $smooting;
  -ms-font-smoothing: $smooting;
  font-smoothing: $smooting;
}

@mixin unselectable {
  -moz-user-select: -moz-none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  -o-user-select: none;
  user-select: none;
}

@mixin overlay($color) {
  position: fixed;
  top: 0;
  left: 0;
  @include square(100%);
  z-index: 10000;
  background-color: rgba($color, .8);

  &.out {
    background-color: rgba($color, 0);
  }
}

@mixin no-flick {
  @include translate3d(0, 0, 0);
}

@mixin sprite-background($image) {
  background-repeat: no-repeat;
  background-image: sprite-url($sprites);
  background-position: sprite-position($sprites, $image);
  @include rect(image-width(sprite-file($sprites, $image)), image-height(sprite-file($sprites, $image)));
}

@mixin centerrect($width, $height, $state: absolute) {
  position: $state;
  @include rect($width, $height);
  top: 50%;
  left: 50%;
  margin: -$height / 2 0 0 - $width / 2;
}

@mixin center {
  display: table;
  width: 100%;

  .child {
    display: table-cell;
    text-align: center;
    vertical-align: middle;
  }
}

@mixin corner($state: absolute, $place: "tl") {
  position: $state;
  @if $place == "tl" {
    top: 0;
    left: 0;
  } @else if $place == "tr" {
    top: 0;
    right: 0;
  } @else if $place == "bl" {
    bottom: 0;
    left: 0;
  } @else if $place == "br" {
    bottom: 0;
    right: 0;
  } @else {
    top: 0;
    left: 0;
  }
}

@mixin rounded-table($r) {
  thead tr:first-child :first-child {
    -moz-border-radius-topleft: $r;
    -webkit-border-top-left-radius: $r;
    border-top-left-radius: $r;
  }

  thead tr:first-child :last-child {
    -moz-border-radius-topright: $r;
    -webkit-border-top-right-radius: $r;
    border-top-right-radius: $r;
  }
}

%ok {
  background-color: #F8FFF0;
  color: #234600;
}

%warning {
  background-color: #FFFCE5;
  color: #840;
}

%error {
  background-color: $error;
  color: $white;
}

@mixin vendor-prefix($name, $argument) {
  -webkit-#{$name}: #{$argument};
  -ms-#{$name}: #{$argument};
  -moz-#{$name}: #{$argument};
  -o-#{$name}: #{$argument};
  #{$name}: #{$argument};
}

// Font Awesome
@mixin fa-icon ($code) {
  @include fontsmoothing();
  color: inherit;
  content: $code;
  line-height: inherit;
  speak: none;
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  transform: translate(0, 0);
}
